openapi: 3.0.0
info:
  title: REST API Architecture 
  version: 1.0.0
  description: Example API with clients and products resources - by Ana Vieira
servers:
  - url: http://localhost:3000/api/v1
tags:
  - name: Auth
    description: Authentication endpoints
  - name: Clients
    description: Operações relacionadas a clientes
  - name: Products
    description: Operações relacionadas a produtos
paths:
  /login:
    post:
      tags: [Auth]
      summary: Login to obtain JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: admin
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: JWT token returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid credentials.
  /clients:
    get:
      tags: [Clients]
      summary: Get all clients
      responses:
        '200':
          description: A list of clients
    post:
      tags: [Clients]
      summary: Create a new client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: Client created
  /clients/{id}:
    get:
      tags: [Clients]
      summary: Get client by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Client found
        '404':
          description: Client not found
    put:
      tags: [Clients]
      summary: Update client by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Client updated
        '404':
          description: Client not found
    delete:
      tags: [Clients]
      summary: Delete client by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Client deleted
        '404':
          description: Client not found
  /products:
    get:
      tags: [Products]
      summary: Get all products
      responses:
        '200':
          description: A list of products
    post:
      tags: [Products]
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
      responses:
        '201':
          description: Product created
  /products/{id}:
    get:
      tags: [Products]
      summary: Get product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product found
        '404':
          description: Product not found
    put:
      tags: [Products]
      summary: Update product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
      responses:
        '200':
          description: Product updated
        '404':
          description: Product not found
    delete:
      tags: [Products]
      summary: Delete product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product deleted
        '404':
          description: Product not found